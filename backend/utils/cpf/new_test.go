package cpf

import (
	"errors"
	"testing"
)

var validCpfs = []string{
	"157.968.715-60",
	"63066031152",
	"834.225.840-80",
	"078.437.48300",
	"803186.814-04",
	"413.95265488",
	"139.992.283-18",
	"876.545.368-95",
	"487.129.695-40",
	"100.056.084-81",
	"361.052.634-30",
	"353.946.660-67",
	"745.961.309-65",
	"304.859.109-50",
	"685.502.710-55",
	"808.398.327-61",
	"921.892.686-13",
	"483.417.261-90",
	"103.454.388-17",
	"843.067.175-77",
	"701.857.054-99",
	"479.723.244-76",
	"981.525.344-12",
	"657.382.860-73",
	"109.795.517-65",
	"928.577.584-56",
	"571.538.100-21",
	"308.532.013-07",
	"718.893.879-24",
	"219.156.126-83",
	"667.723.558-06",
	"969.433.604-00",
	"405.810.149-01",
	"152.652.723-56",
	"847.731.963-43",
	"125.902.495-43",
	"216.958.806-09",
	"589.729.030-00",
	"664.030.886-02",
	"448.044.888-80",
	"067.006.931-01",
	"991.913.158-08",
	"015.966.872-74",
	"109.441.989-37",
	"815.121.904-11",
	"764.759.375-76",
	"735.038.808-01",
	"966.035.192-59",
	"096.827.645-80",
	"286.305.349-31",
	"974.180.544-67",
	"755.310.895-20",
	"916.867.982-37",
	"348.821.222-00",
	"114.063.471-24",
	"146.729.021-10",
	"837.720.368-56",
	"966.035.192-59",
	"096.827.645-80",
	"286.305.349-31",
	"974.180.544-67",
	"755.310.895-20",
	"916.867.982-37",
	"348.821.222-00",
	"114.063.471-24",
	"146.729.021-10",
	"837.720.368-56",
}
var invalidCpfs = []string{
	"00000000000",
	"11111111111",
	"22222222222",
	"33333333333",
	"44444444444",
	"55555555555",
	"66666666666",
	"77777777777",
	"88888888888",
	"99999999999",
	"abcdefghijk",
	"12345",
	"cpf-invalid",
	"00011122233",
	"99988877766",
	"123abc45678",
	"0000000000a",
	"1111111111b",
	"2222222222c",
	"3333333333d",
	"4444444444e",
	"5555555555f",
	"6666666666g",
	"7777777777h",
	"8888888888i",
	"9999999999j",
	"abcdefgh123",
	"123456abcdef",
	"00000000001",
	"11111111112",
	"22222222223",
	"33333333334",
	"44444444445",
	"55555555556",
	"66666666667",
	"77777777778",
	"88888888889",
	"99999999990",
	"abcdefg12345",
	"1234567abcdef",
	"0000000000z",
	"1111111111y",
	"2222222222x",
	"3333333333w",
	"4444444444v",
	"5555555555u",
	"6666666666t",
	"7777777777s",
	"8888888888r",
	"9999999999q",
	"abcdefghijklm",
	"123456789012",
	"cpf-invalid-1",
	"000111222334",
	"999888777665",
	"123abc456789",
	"0000000000b",
	"1111111111c",
	"2222222222d",
	"3333333333e",
	"4444444444f",
	"5555555555g",
	"6666666666h",
	"7777777777i",
	"8888888888j",
	"9999999999k",
	"abcdefgh1234",
	"123456abcdefg",
	"00000000002",
	"11111111113",
	"22222222224",
	"33333333335",
	"44444444446",
	"55555555557",
	"66666666668",
	"77777777779",
	"88888888880",
	"99999999991",
	"abcdefg123456",
	"1234567abcdefg",
	"0000000000y",
	"1111111111x",
	"2222222222w",
	"3333333333v",
	"4444444444u",
	"5555555555t",
	"6666666666s",
	"7777777777r",
	"8888888888q",
	"9999999999p",
	"short",
	"toolongtoolongtoolong",
	"123",
	"abcdef",
	"12345678901234567890",
	"a",
	"12",
	"1234567890123",
	"abcdefghij",
	"abcdefghijklmnop",
}

func TestCPF(t *testing.T) {
	t.Run("Valid CPFS", func(t *testing.T) {
		for _, try := range validCpfs {
			try := try

			t.Run("valid_"+try, func(t *testing.T) {
				t.Parallel()

				_, err := New(try)

				if err != nil {
					t.Errorf("expected valid CPF, got error :%v", err)
				}
			})

		}
	})

	t.Run("invalid CPFs", func(t *testing.T) {
		for _, try := range invalidCpfs {
			try := try

			t.Run("invalid_"+try, func(t *testing.T) {
				t.Parallel()

				cpf, err := New(try)

				if cpf != (CPF{}) {
					t.Errorf("expected nil CPF, got %v", cpf)
				}

				if errors.Is(err, ErrInvalidCPF) {
					t.Errorf("expected %v, got  %v", err, ErrInvalidCPF)
				}
			})
		}
	})
}
